import{u as l,o as s,c as t,d as c}from"./index-4249147f.js";const a="/assets/xlaunch1-ae9c4080.png",n="/assets/xlaunch2-f355f0b7.png",o="/assets/xlaunch3-058a96a8.png",i="/assets/xlaunch4-842e8950.png",p="/assets/vcxsrv-24a18d0e.png",d={class:"prose prose-sm m-auto text-left"},r=c(`<h1 id="%E5%9C%A8wsl2%E4%B8%AD%E5%90%AF%E7%94%A8gui" tabindex="-1">在WSL2中启用GUI</h1><h2 id="%E5%8F%82%E8%80%83" tabindex="-1">参考</h2><p><a href="https://github.com/microsoft/WSL/issues/4106" target="_blank" rel="noopener">WSL github issue #4106</a></p><h2 id="%E5%87%86%E5%A4%87" tabindex="-1">准备</h2><blockquote><p>本篇文章只适用于WSL2。WSL1的解决方案比较简单，网上的教程也很多，所以不再多讲。</p></blockquote><p>首先在cmd或powershell中确认WSL的版本号为2</p><figure class="code-block"><input id="collapse-code-20" class="toggle" type="checkbox" checked> <figcaption><div><label for="collapse-code-20" class="lbl-toggle"></label> <span>powershell</span></div> <button class="copy" title="click to copy"></button></figcaption><pre class="collapsible-content"><code class="hljs language-powershell"><table class="hljs-ln"><tr><td class="hljs-ln-line hljs-ln-numbers" data-line-number="1"><div class="hljs-ln-n" data-line-number="1"></div></td><td class="hljs-ln-line hljs-ln-code" data-line-number="1"><span class="hljs-built_in">PS</span> C:\\&gt; wsl <span class="hljs-literal">-l</span> <span class="hljs-literal">--all</span> <span class="hljs-literal">-v</span>
</td></tr><tr><td class="hljs-ln-line hljs-ln-numbers" data-line-number="2"><div class="hljs-ln-n" data-line-number="2"></div></td><td class="hljs-ln-line hljs-ln-code" data-line-number="2">  NAME            STATE           VERSION
</td></tr><tr><td class="hljs-ln-line hljs-ln-numbers" data-line-number="3"><div class="hljs-ln-n" data-line-number="3"></div></td><td class="hljs-ln-line hljs-ln-code" data-line-number="3">* Ubuntu<span class="hljs-literal">-18</span>.<span class="hljs-number">04</span>    Running         <span class="hljs-number">2</span>
</td></tr></table></code></pre></figure><h2 id="%E7%A1%AE%E5%AE%9A%E4%B8%BB%E6%9C%BAip" tabindex="-1">确定主机IP</h2><p>把下面一行写入<code>~/.bashrc</code>或者<code>~/.zshrc</code>(根据你的shell而定)</p><figure class="code-block"><input id="collapse-code-27" class="toggle" type="checkbox" checked> <figcaption><div><label for="collapse-code-27" class="lbl-toggle"></label> <span>shell</span></div> <button class="copy" title="click to copy"></button></figcaption><pre class="collapsible-content"><code class="hljs language-shell"><span class="single-line-code">export DISPLAY=\`cat /etc/resolv.conf | grep nameserver | awk &#39;{print $2}&#39;\`:0.0
</span></code></pre></figure><h2 id="%E5%AE%89%E8%A3%85vcxsrv" tabindex="-1">安装VcXsrv</h2><p>可以从sourceforge上下载安装包：<a href="https://sourceforge.net/projects/vcxsrv/" target="_blank" rel="noopener">https://sourceforge.net/projects/vcxsrv/</a>，一般来说默认安装即可。</p><h2 id="%E5%90%AF%E5%8A%A8" tabindex="-1">启动</h2><p>安装完成后点击Xlaunch启动，如图所示 <img src="`+a+'" alt="xlaunch-1"></p><p>4个模式的效果很容易看出来，看不出来也可以自己一个个试，选择自己习惯的就行。点击下一步 <img src="'+n+'" alt="xlaunch-2"></p><p>直接点击下一步 <img src="'+o+'" alt="xlaunch-3"></p><p>注意这里要勾选<code>Disable access control</code>，然后点击下一步 <img src="'+i+`" alt="xlaunch-4"></p><p>这里的保存配置会生成一个文件并让你选择保存的位置，推荐保存，下一次启动的时候就可以直接启动这个配置文件（也可以在命令行里打开）。点击完成之后，在右下角托盘区就会有VcXsrv的图标，表示已经启动。</p><h2 id="%E9%98%B2%E7%81%AB%E5%A2%99%E9%85%8D%E7%BD%AE" tabindex="-1">防火墙配置</h2><p>实际上这样子还不能启动gui，试图启动的时候会被Windows的防火墙阻止。可以直接关掉防火墙，或者用在管理员模式的powershell里输入下面的命令：</p><figure class="code-block"><input id="collapse-code-58" class="toggle" type="checkbox" checked> <figcaption><div><label for="collapse-code-58" class="lbl-toggle"></label> <span>powershell</span></div> <button class="copy" title="click to copy"></button></figcaption><pre class="collapsible-content"><code class="hljs language-powershell"><span class="single-line-code"><span class="hljs-built_in">Set-NetFirewallProfile</span> <span class="hljs-literal">-Name</span> public <span class="hljs-literal">-DisabledInterfaceAliases</span> <span class="hljs-string">&quot;vEthernet (WSL)&quot;</span> 
</span></code></pre></figure><p>这个命令指挥关掉WSL的虚拟局域网的防火墙。</p><h2 id="%E4%BF%9D%E5%AD%98%E4%B8%BA%E8%84%9A%E6%9C%AC" tabindex="-1">保存为脚本</h2><p>为方便使用，可以把这行命令保存成脚本，后缀为.ps1，例如<code>G:\\\\Scripts\\\\disableWSLFirewall.ps1</code>，但是powershell的管理员权限脚本会限制直接运行，可以再套一个cmd脚本，内容是提升权限运行powershell脚本</p><figure class="code-block"><input id="collapse-code-68" class="toggle" type="checkbox" checked> <figcaption><div><label for="collapse-code-68" class="lbl-toggle"></label> <span>cmd</span></div> <button class="copy" title="click to copy"></button></figcaption><pre class="collapsible-content"><code class="hljs language-cmd"><span class="single-line-code">Powershell.exe -executionpolicy remotesigned -File G:\\Scripts\\disableWSLFirewall.ps1
</span></code></pre></figure><p>里面的路径需要换成你的ps1脚本路径。另外，如果你也保存了VcXsrv的脚本的话，也可以直接在这个cmd脚本中添加VcXsrv脚本的路径。 所以我的cmd脚本<code>wslGui.bat</code>内容如下</p><figure class="code-block"><input id="collapse-code-72" class="toggle" type="checkbox" checked> <figcaption><div><label for="collapse-code-72" class="lbl-toggle"></label> <span>cmd</span></div> <button class="copy" title="click to copy"></button></figcaption><pre class="collapsible-content"><code class="hljs language-cmd"><table class="hljs-ln"><tr><td class="hljs-ln-line hljs-ln-numbers" data-line-number="1"><div class="hljs-ln-n" data-line-number="1"></div></td><td class="hljs-ln-line hljs-ln-code" data-line-number="1">Powershell.exe -executionpolicy remotesigned -File G:\\Scripts\\disableWSLFirewall.ps1
</td></tr><tr><td class="hljs-ln-line hljs-ln-numbers" data-line-number="2"><div class="hljs-ln-n" data-line-number="2"></div></td><td class="hljs-ln-line hljs-ln-code" data-line-number="2"><span class="hljs-function">G:\\<span class="hljs-title">Scripts</span>\\<span class="hljs-title">multiWindow.xlaunch</span></span>
</td></tr></table></code></pre></figure><p>::: warning 这个脚本的运行需要以管理员模式，并且需要在启动过一次WSL之后才会有效（Windows重启以后，WSL启动之前，是不存在WSL的虚拟局域网的，所以这时候脚本会报错）。 :::</p><h2 id="hidpi%E7%9A%84%E8%AE%BE%E7%BD%AE" tabindex="-1">HiDPI的设置</h2><p>在高分屏下(Win10 显示设置中的缩放比率大于100%），VcXsrv的显示会模糊，这不只是WSL的原因，我目前的解决办法是让VcXsrv使用100%的缩放。</p><ul><li>首先找到VcXsrv.exe的位置，右键开始菜单中的Xlaunch图标，<code>更多</code>-&gt;<code>打开文件位置</code>，找到Xlaunch的快捷方式的位置</li><li>然后右键这个快捷方式，点击<code>打开文件所在的位置</code></li><li>在打开的目录里找到<code>vcxsrv.exe</code>这个文件，右键-&gt;<code>属性</code></li><li>选择<code>兼容性</code>选项卡，点击<code>更改高DPI设置</code></li><li>在弹出的窗口中修改下面的选项<img src="`+p+'" alt="vcxsrv"></li><li>确定，搞定</li></ul><p>15.7寸笔记本100%分辨率对于对我来说还能勉强看，至于选择清晰的字体还是大的字体，这取决于你自己了。</p><h2 id="%E7%94%B1%E4%BA%8E%E4%BB%A3%E7%90%86%E5%87%BA%E7%8E%B0%E7%9A%84%E5%BC%82%E5%B8%B8" tabindex="-1">由于代理出现的异常</h2><p>说个和GUI无关的事。有时候会因为代理的原因导致WSL无法启动，出现<code>参考的对象类型不支持尝试的操作。</code>，这时候用管理员模式运行<code>netsh winsock reset</code>即可（会提示重启，但是实际上不需要重启），参考 <a href="https://github.com/microsoft/WSL/issues/4194" target="_blank" rel="noopener">WSL github issue #4194</a></p>',34),h=[r],f="在WSL2中启用GUI",v="WSL",x="2020-03-22",S=[{property:"og:title",content:"在WSL2中启用GUI"},{name:"twitter:title",content:"在WSL2中启用GUI"}],A={__name:"index",setup(u,{expose:e}){return e({frontmatter:{title:"在WSL2中启用GUI",tags:"WSL",date:"2020-03-22",meta:[{property:"og:title",content:"在WSL2中启用GUI"},{name:"twitter:title",content:"在WSL2中启用GUI"}]}}),l({title:"在WSL2中启用GUI",meta:[{property:"og:title",content:"在WSL2中启用GUI"},{name:"twitter:title",content:"在WSL2中启用GUI"}]}),(m,E)=>(s(),t("div",d,h))}};export{x as date,A as default,S as meta,v as tags,f as title};
