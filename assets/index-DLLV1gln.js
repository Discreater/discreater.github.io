import{aj as n,c as l,ar as t,o as e}from"./main-Czk_VIOw.js";const p={class:"prose prose-sm m-auto text-left"},o="JS 按位操作符溢出问题",h="zh-CN",u="javascript",g="2020-03-14",b=[{property:"og:title",content:"JS 按位操作符溢出问题"},{name:"twitter:title",content:"JS 按位操作符溢出问题"}],j={__name:"index",setup(i,{expose:a}){return a({frontmatter:{title:"JS 按位操作符溢出问题",lang:"zh-CN",tags:"javascript",date:"2020-03-14",meta:[{property:"og:title",content:"JS 按位操作符溢出问题"},{name:"twitter:title",content:"JS 按位操作符溢出问题"}]}}),n({title:"JS 按位操作符溢出问题",meta:[{property:"og:title",content:"JS 按位操作符溢出问题"},{name:"twitter:title",content:"JS 按位操作符溢出问题"}]}),(m,s)=>(e(),l("div",p,s[0]||(s[0]=[t(`<h1 id="js-%E6%8C%89%E4%BD%8D%E6%93%8D%E4%BD%9C%E7%AC%A6%E6%BA%A2%E5%87%BA%E9%97%AE%E9%A2%98" tabindex="-1">JS 按位操作符溢出问题</h1><p>最近刷leetcode的时候，碰到要处理 <code>int</code> 上边界(<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>31</mn></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">2^{31}-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8974em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">31</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></eq>)和下边界(<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo><msup><mn>2</mn><mn>31</mn></msup></mrow><annotation encoding="application/x-tex">-2^{31}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8974em;vertical-align:-0.0833em;"></span><span class="mord">−</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">31</span></span></span></span></span></span></span></span></span></span></span></span></eq>)的情况，这时候想当然地用了移位操作符<code>&lt;&lt;</code>来计算2的幂次，本以为js的number类型上限应该大于32位，但是实际情况并不是和想象中的一样，先看结果：</p><figure class="code-block"><input id="collapse-code-6" class="toggle" type="checkbox" checked> <figcaption><div><label for="collapse-code-6" class="lbl-toggle"></label> <span>shell</span></div> <button class="copy" title="click to copy"></button></figcaption><pre class="collapsible-content"><code class="hljs language-shell"><table class="hljs-ln"><tbody><tr><td class="hljs-ln-line hljs-ln-numbers" data-line-number="1"><div class="hljs-ln-n" data-line-number="1"></div></td><td class="hljs-ln-line hljs-ln-code" data-line-number="1"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">1 &lt;&lt; <span class="hljs-string">31</span></span>
</td></tr><tr><td class="hljs-ln-line hljs-ln-numbers" data-line-number="2"><div class="hljs-ln-n" data-line-number="2"></div></td><td class="hljs-ln-line hljs-ln-code" data-line-number="2">-2147483648 // -2^31
</td></tr><tr><td class="hljs-ln-line hljs-ln-numbers" data-line-number="3"><div class="hljs-ln-n" data-line-number="3"></div></td><td class="hljs-ln-line hljs-ln-code" data-line-number="3"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash"><span class="hljs-string">1 &lt;&lt; 30</span></span>
</td></tr><tr><td class="hljs-ln-line hljs-ln-numbers" data-line-number="4"><div class="hljs-ln-n" data-line-number="4"></div></td><td class="hljs-ln-line hljs-ln-code" data-line-number="4">1073741824  // 2^30
</td></tr><tr><td class="hljs-ln-line hljs-ln-numbers" data-line-number="5"><div class="hljs-ln-n" data-line-number="5"></div></td><td class="hljs-ln-line hljs-ln-code" data-line-number="5"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash"><span class="hljs-string">-1 &lt;&lt; 31</span></span>
</td></tr><tr><td class="hljs-ln-line hljs-ln-numbers" data-line-number="6"><div class="hljs-ln-n" data-line-number="6"></div></td><td class="hljs-ln-line hljs-ln-code" data-line-number="6">-2147483648
</td></tr><tr><td class="hljs-ln-line hljs-ln-numbers" data-line-number="7"><div class="hljs-ln-n" data-line-number="7"></div></td><td class="hljs-ln-line hljs-ln-code" data-line-number="7"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">-(1 &lt;&lt; <span class="hljs-string">31)</span></span>
</td></tr><tr><td class="hljs-ln-line hljs-ln-numbers" data-line-number="8"><div class="hljs-ln-n" data-line-number="8"></div></td><td class="hljs-ln-line hljs-ln-code" data-line-number="8">2147483648
</td></tr><tr><td class="hljs-ln-line hljs-ln-numbers" data-line-number="9"><div class="hljs-ln-n" data-line-number="9"></div></td><td class="hljs-ln-line hljs-ln-code" data-line-number="9"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash"><span class="hljs-string">1 &lt;&lt; 32</span></span>
</td></tr><tr><td class="hljs-ln-line hljs-ln-numbers" data-line-number="10"><div class="hljs-ln-n" data-line-number="10"></div></td><td class="hljs-ln-line hljs-ln-code" data-line-number="10">1
</td></tr></tbody></table></code></pre></figure><p>1左移31位变成了负数，出现这种情况是因为js的按位操作符是<strong>将操作数看作32位来计算</strong>，结果也是32位的形式。 下面是<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Bitwise_Operators#Summary" target="_blank" rel="noopener">MDN的官方解释</a></p><blockquote><p><strong>按位操作符（Bitwise operators）</strong> 将其操作数（operands）当作32位的比特序列（由0和1组成），而不是十进制、十六进制或八进制数值。例如，十进制数9，用二进制表示则为1001。按位操作符操作数字的二进制形式，但是返回值依然是标准的JavaScript数值。</p></blockquote><p>顺便推荐一波<a href="https://zhuanlan.zhihu.com/p/27662366" target="_blank" rel="noopener">进阶的解决办法</a>，来自知乎的ice1000</p>`,6)])))}};export{g as date,j as default,h as lang,b as meta,u as tags,o as title};
